class Solution {
public:
    vector<int> leftRightDifference(vector<int>& nums) {
        int n = nums.size();
        vector<int> prefix_sum(n, 0);
        vector<int> suffix_sum(n, 0);
        vector<int> ans;
        prefix_sum[0] = nums[0];
        for (int i = 1; i < n; i++) {
            prefix_sum[i] = prefix_sum[i - 1] + nums[i];
        }

        suffix_sum[n - 1] = nums[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            suffix_sum[i] = suffix_sum[i + 1] + nums[i];
        }

        for (int i = 0; i < n; i++) {
            int left_sum = 0;
            int right_sum = 0;

            if (i > 0) {
                left_sum = prefix_sum[i - 1];
            }
            if (i < n - 1) {
                right_sum = suffix_sum[i + 1];
            }

            ans.push_back(abs(left_sum - right_sum));
        }

        return ans;
    }
};
